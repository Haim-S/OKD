{"version":3,"file":"static/js/449.a7e899fd.chunk.js","mappings":"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","sources":["components/admin/AdminControl.js","pages/admin/Admin.js"],"sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport {TextField, Button} from \"@mui/material\";\r\nimport {logout} from '../../store/slices/authSlice';\r\nimport {useDispatch} from 'react-redux';\r\nimport { createImage } from '../../store/slices/imagesSlice';\r\nimport { createNewProject } from '../../store/slices/projectSlice';\r\nimport { getLocalStorageValue } from '../../utils/localStorage.util';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\n\r\n\r\n\r\n\r\nconst AdminControl = () => {\r\n\r\n\r\n  const projectNameRef = useRef();\r\n  const categoryRef = useRef();\r\n  const projectManagerRef = useRef();\r\n  const urlRef = useRef();\r\n  \r\n\r\nconst dispatch = useDispatch();\r\n\r\n\r\n\r\nconst logoutSubmit = (e) => {\r\n  e.preventDefault();\r\n  dispatch(logout(getLocalStorageValue(\"ac_token\")));\r\n}\r\n\r\nconst createProject = (e, index) => {\r\n  e.preventDefault();\r\n  console.log(urlRef);\r\n  const values = {\r\n    name_project: projectNameRef.current.value,\r\n    project_manager: projectManagerRef.current.value,\r\n    name_architect: null,\r\n    name_photographer: null,\r\n    category: categoryRef.current.value,\r\n    img_url: inputRefs.current[index].current.value,\r\n\r\n  }\r\n  console.log(values);\r\n  // dispatch(createImage(values.img_url, values.category, values.name_project));\r\n  // dispatch(createNewProject(values));\r\n}\r\n\r\n\r\nconst [plusImage, setPlusImage] = useState(3);\r\n\r\nconst plus = () => {\r\n  setPlusImage((prevCount)=> prevCount + 1);\r\n};\r\n\r\nconst minus = () => {\r\n  setPlusImage((prevCount) => prevCount - 1);\r\n}\r\n\r\n\r\nconst inputRefs = useRef(Array.from({ length: plusImage }, () => React.createRef()));\r\n\r\nconst divElements = Array.from({ length: plusImage }, (_, index) => (\r\n   <div key={index} style={{display: \"flex\", alignItems: \"center\", width: \"77%\"}}>\r\n        <RemoveCircleOutlineIcon onClick={minus}/>\r\n        <TextField style={{margin: \"8px 15px\", width: \"80%\"}} inputRef={inputRefs.current[index]} type='text' variant='outlined' label='image url'/>\r\n        <Button style={{backgroundColor: \"#000\"}} onClick={(e) => createProject(e, index)}  type='submit'  variant=\"contained\">send</Button>\r\n  </div>\r\n));\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div>\r\n      <form onSubmit={logoutSubmit}>\r\n        <button type='submit'> logout</button>\r\n      </form>\r\n      </div>\r\n      <div>\r\n        <form  >\r\n          <div style={{marginBottom: \"10px\"}}>\r\n          <TextField  inputRef={projectNameRef} type='text' variant='outlined' label='project name'/>\r\n          <TextField style={{margin: \"0 15px\"}} inputRef={categoryRef}  type='text' variant='outlined' label='category'/>\r\n          <TextField inputRef={projectManagerRef} type='text' variant='outlined' label='project manager'/>\r\n          </div>\r\n         \r\n        </form>\r\n        <form onSubmit={createProject}>\r\n        <div style={{display: \"flex\", alignItems: \"center\", width: \"77%\"}}>\r\n          <AddCircleOutlineIcon onClick={plus}/>\r\n          \r\n          <TextField style={{margin: \"0 15px\", width: \"80%\"}} inputRef={inputRefs.current[inputRefs.current.length - 1]} type='text' variant='outlined' label='image url'/>\r\n          <Button style={{backgroundColor: \"#000\"}} onClick={(e)=> createProject(e,inputRefs.current.length - 1)} type='submit'  variant=\"contained\">send</Button>\r\n          </div>\r\n          {divElements}\r\n        </form>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminControl","import React, {useRef}  from 'react'\r\nimport {TextField, Button} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {login} from '../../store/slices/authSlice';\r\nimport AdminControl from \"../../components/admin/AdminControl\";\r\n\r\n\r\nconst Admin = () => {\r\n\r\nconst dispatch = useDispatch();\r\n\r\nconst { isAuth} = useSelector((state)=> state.auth);\r\nconst emailRef = useRef();\r\nconst passwordRef = useRef();\r\n\r\nconst loginSubmit = (e) => {\r\n  e.preventDefault();\r\n  const values = {\r\n    email:    emailRef.current.value,\r\n    password: passwordRef.current.value\r\n  }\r\n  dispatch(login(values)); \r\n   emailRef.current.value = \"\";\r\npasswordRef.current.value = \"\";\r\nconsole.log(isAuth);\r\n}\r\n\r\n  return (\r\n\r\n    <div className='container'>\r\n    \r\n      \r\n        {/* {console.log(data)} */}\r\n        { isAuth ?  <AdminControl/> :   \r\n        <form onSubmit={loginSubmit}>\r\n      <h1 style={{marginBottom: \"20px\"}}>login</h1>\r\n          <TextField inputRef={emailRef} type='email' variant='outlined' label='Email'/>\r\n          <TextField inputRef={passwordRef} style={{padding: \"10px\"}} name='password' type='text' variant='outlined' label='Password'/>\r\n          <Button style={{backgroundColor: \"#000\"}}  type='submit' variant=\"contained\" >LOGIN</Button>\r\n        </form> \r\n        }\r\n     \r\n    </div> \r\n\r\n  )\r\n}\r\n\r\nexport default Admin"],"names":["projectNameRef","useRef","categoryRef","projectManagerRef","urlRef","dispatch","useDispatch","createProject","e","index","preventDefault","console","log","values","name_project","current","value","project_manager","name_architect","name_photographer","category","img_url","inputRefs","_useState","useState","_useState2","_slicedToArray","plusImage","setPlusImage","minus","prevCount","Array","from","length","React","divElements","_","_jsxs","style","display","alignItems","width","children","_jsx","RemoveCircleOutlineIcon","onClick","TextField","margin","inputRef","type","variant","label","Button","backgroundColor","className","onSubmit","logout","getLocalStorageValue","marginBottom","AddCircleOutlineIcon","isAuth","useSelector","state","auth","emailRef","passwordRef","AdminControl","email","password","login","padding","name"],"sourceRoot":""}